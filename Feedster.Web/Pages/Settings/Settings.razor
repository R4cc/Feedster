@page "/settings"
@inject UserRepository _userRepo
@inject ImageService _ImageService
@inject ArticleRepository _articleRepo
@inject NavigationManager _navManager
@inject HttpClient _httpClient

<PageTitle>Feedster - Settings</PageTitle>

<div class="container max-w-lg sm:border-2 sm:p-5 sm:rounded-xl sm:dark:bg-slate-800 sm:dark:border-gray-600 sm:bg-gray-100">
    <EditForm Model="_userSettings" OnValidSubmit="SaveChanges">
        <DataAnnotationsValidator/>
        <h5 class="mb-2 font-bold tracking-tight dark:text-white space-mono dark:brightness-[0.85]" style="font-size: 3.5em">Settings</h5>
        
        <div class="rounded-lg text-indigo-400 dark:brightness-[0.75] dark:bg-indigo-300 bg-indigo-200 border-l-4 border-indigo-500 text-indigo-700 p-4 mb-2" role="alert">
          <p class="font-bold">Don't forget to Save!</p>
          <p>Save with the button at the bottom</p>
        </div>
        
        <h5 class="mb-2 font-bold tracking-tight dark:text-white space-mono  dark:brightness-[0.85]" style="font-size: 2em">Articles</h5>
        
        <label class="dark:text-gray-200">Automatically update articles after...</label>
        <select @bind=_userSettings.ArticleRefreshAfterMinutes class="w-full mb-5 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
            <option selected>Select interval</option>
            <option value=5>5 Minutes</option>
            <option value=10>10 Minutes</option>
            <option value=15>15 Minutes</option>
            <option value=30>30 Minutes</option>
            <option value=60>1 Hour</option>
            <option value=360>6 Hours</option>
            <option value=1440>24 Hours</option>
            <option value=0>Never</option>
        </select>
        
        <label class="dark:text-gray-200">Delete articles older than...</label>
        <select @bind=_userSettings.ArticleExpirationAfterDays class="mb-5 w-full bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
            <option selected>Select duration</option>
            <option value=7>1 Week</option>
            <option value=14>2 Weeks</option>
            <option value=30>1 Month</option>
            <option value=90>3 Months</option>
            <option value=180>6 Months</option>
            <option value=365>1 Year</option>
            <option value=0>Never</option>
        </select>
        
        <label class="dark:text-gray-200">Article Count per page (0 = No limit)</label>
        <div class="relative mb-5">
            <InputNumber @bind-Value=_userSettings.ArticleCountOnPage maxlength="4" class="w-full bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"/>
            <ValidationMessage For="@(() => _userSettings.ArticleCountOnPage)" />
        </div>
        
        <label class="dark:text-gray-200">Max Article Count in the Database (0 = No limit)</label>
        <div class="relative mb-5">
            <InputNumber disabled @bind-Value=_userSettings.MaxArticleCountInDb maxlength="5" class="disabled cursor-not-allowed w-full bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"/>
            <ValidationMessage For="@(() => _userSettings.MaxArticleCountInDb)" />
        </div>
        
        <h5 class="mb-2 font-bold tracking-tight dark:text-white space-mono  dark:brightness-[0.85]" style="font-size: 2em">Appearance</h5>
        
        <div class="max-w-sm mb-5 align-middle border-2 border-gray-200 dark:border-gray-500 p-3 bg-gray-200 dark:bg-slate-700 rounded-lg h-[3.75em]">
            <label class="inline-block align-middle text-base dark:text-gray-200">Dark Mode</label>
            <div class="inline-block align-middle float-right block">                
                <input @bind=_isDarkMode class="switch" type="checkbox">
            </div>
        </div>
        
        <div class="max-w-sm mb-5 align-middle border-2 border-gray-200 dark:border-gray-500 p-3 bg-gray-200 dark:bg-slate-700 rounded-lg h-[3.75em]">
            <label class="inline-block align-middle text-base dark:text-gray-200 ">Show Article Images</label>
            <div class="inline-block align-middle float-right block">                
                <input @bind=_userSettings.ShowImages class="switch" type="checkbox">
            </div>
        </div>
        
        <div class="max-w-sm mb-5 align-middle border-2 border-gray-200 dark:border-gray-500 p-3 dark:bg-slate-700 bg-gray-200 rounded-lg h-[3.75em]">
            <label class="inline-block align-middle text-base dark:text-gray-200">Download Article Images</label>
            <div class="inline-block align-middle float-right block rounded">
                <input @bind=_userSettings.DownloadImages class="switch" type="checkbox">
            </div>
        </div>
        
        <h5 class="mb-2 font-bold tracking-tight dark:text-white space-mono dark:brightness-[0.85]" style="font-size: 1.5em">Cache Sizes</h5>
        
        <div class="max-w-sm grid grid-cols-3 gap-4 mb-5 ">
            <div class="col-span-2 inline-block align-middle border-2 dark:border-gray-500 border-gray-200 p-3 bg-gray-200 dark:bg-slate-700  rounded-lg h-[3.75rem]">
                <p class="inline-block align-middle text-base dark:text-gray-200">Image Cache: </p>
                <div class="inline-block align-middle float-right block space-mono dark:text-gray-200">
                    <p>@(_imageFolderSize.ToString("0.##") == "0" ? "<1" : _imageFolderSize.ToString("0.##"))MB</p>
                </div>
            </div>
            <button @onclick="ClearImageCache" class="dark:border-gray-600 dark:hover:text-white dark:hover:bg-indigo-700 dark:focus:ring-gray-800 dark:bg-indigo-600 dark:text-white col shadow-md max-w-full h-[3.75rem] text-gray-900 hover:text-white border border-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2">
                <svg style="display:inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="align-middle  w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />
                    </svg>
                    <a class="align-middle" style="display:inline-block">Clear</a>
            </button>
        </div>
        
        <div class="max-w-sm grid grid-cols-3 gap-4 mb-5">
            <div class="col-span-2 inline-block align-middle border-2 border-gray-200 dark:border-gray-500 p-3 bg-gray-200 dark:bg-slate-700  rounded-lg h-[3.75rem]">
                <label class="inline-block align-middle text-base dark:text-gray-200">Article Cache: </label>
                <div class="inline-block align-middle float-right block space-mono dark:text-gray-200">
                    <p>@(_databaseSize.ToString("0.##") == "0" ? "<1" : _databaseSize.ToString("0.##"))MB</p>
                </div>
            </div>
            <button @onclick="ClearArticles" class="ddark:border-gray-600 dark:hover:text-white dark:hover:bg-indigo-700 dark:focus:ring-gray-800 dark:bg-indigo-600 dark:text-white col shadow-md max-w-full h-[3.75rem] text-gray-900 hover:text-white border border-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2">
                <svg style="display:inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="align-middle  w-6 h-6">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />
                </svg>
                <a class="align-middle" style="display:inline-block">Clear</a>
            </button>
        </div>

        <h5 class="mb-2 font-bold tracking-tight dark:text-white space-mono dark:brightness-[0.85]" style="font-size: 1.5em">Import / Export OPML File</h5>

        <div class="max-w-sm grid grid-cols-2 gap-4 mb-5">
            <label for="opmlFileInput" class="cursor-pointer dark:border-gray-600 dark:hover:text-white dark:hover:bg-indigo-700 dark:focus:ring-gray-800 dark:bg-indigo-600 dark:text-white col shadow-md max-w-full h-[3.75rem] text-gray-900 hover:text-white border border-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center flex items-center justify-center">Import OPML File</label>
            <button @onclick="ExportOpml" class="dark:border-gray-600 dark:hover:text-white dark:hover:bg-indigo-700 dark:focus:ring-gray-800 dark:bg-indigo-600 dark:text-white col shadow-md max-w-full h-[3.75rem] text-gray-900 hover:text-white border border-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center">Export OPML File</button>
            <InputFile id="opmlFileInput" OnChange="ImportOpml" accept=".opml" class="hidden" />

        </div>
    <button type="submit" class="dark:border-gray-600 dark:hover:text-white dark:hover:bg-indigo-700 dark:focus:ring-gray-800 dark:bg-indigo-600 dark:text-white w-1/2 shadow-md mb-4 text-green-600 hover:text-white border border-green-600 hover:bg-green-600 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2">
        <svg style="display:inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <a class="align-middle" style="display:inline-block">Save</a>
    </button>
    </EditForm>
    </div>

@_notification

@code {
    UserSettings _userSettings = new();
    long _imageFolderSize;
    long _databaseSize;
    bool _isDarkMode;
    RenderFragment? _notification;
    protected override async Task OnInitializedAsync()
    {
        await LoadUserSettings();
    }

    private async Task LoadUserSettings()
    {
        _userSettings = await _userRepo.Get();
        _isDarkMode = _userSettings.IsDarkMode;
        LoadCacheSizes();
    }

    private void LoadCacheSizes()
    {
        _imageFolderSize = _ImageService.GetImageCacheFolderSize();
        _databaseSize = _ImageService.GetDatabaseSize();
    }

    private async Task SaveChanges()
    {
        if (_isDarkMode != _userSettings.IsDarkMode)
        {
            _userSettings.IsDarkMode = _isDarkMode;
            await _userRepo.Update(_userSettings);
            await LoadUserSettings();
            _navManager.NavigateTo("/settings", forceLoad: true);
        }
        else
        {
            await _userRepo.Update(_userSettings);
            await LoadUserSettings();
        }
        ShowNotification("Changes Saved!", "All changes have been saved. Some settings can take up to 10 minutes to take effect.");
    }

    private void ClearImageCache()
    {
        _ImageService.ClearImageCache();
        LoadCacheSizes();
        ShowNotification("Images cleared!", "All images have been successfully cleared.");
    }

    private void ExportOpml()
    {
        _navManager.NavigateTo("api/Opml/export", forceLoad: true);
    }

    private async Task ImportOpml(InputFileChangeEventArgs e)
    {
        var file = e.File;
        using var content = new MultipartFormDataContent();
        using var stream = file.OpenReadStream(10 * 1024 * 1024);
        content.Add(new StreamContent(stream), "file", file.Name);

        var response = await _httpClient.PostAsync("api/Opml/import", content);
        if (response.IsSuccessStatusCode)
        {
            ShowNotification("Import completed!", "Feeds imported successfully.");
        }
        else
        {
            ShowNotification("Import failed!", "Failed to import feeds.");
        }
    }

    private async Task ClearArticles()
    {
        await _articleRepo.ClearAllArticles();
        LoadCacheSizes();
        ShowNotification("Articles cleared!", "All articles have been successfully cleared.");
    }

    private void ShowNotification(string title, string summary)
    {
        _notification = @<Notification Title="@title" Summary="@summary" IsShown=@true/>;
    }
}